version: 2.1
orbs:
  slack: circleci/slack@3.4.2

executors:
  docker-executor:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester-uv

jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - run: echo 'CI done'

  build_and_test:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: 'Setup virtual env'
          command: |
            uv venv --python 3.11 /usr/local/share/virtualenvs/tap-zendesk
            source /usr/local/share/virtualenvs/tap-zendesk/bin/activate
            uv pip install .[test]
            uv pip install coverage
            uv pip install --upgrade awscli
      - persist_to_workspace:
          root: /
          paths:
            - root/.local/share/uv/python
            - usr/local/share/virtualenvs/tap-zendesk
      - run:
          name: 'pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-zendesk/bin/activate
            pylint tap_zendesk -d missing-docstring,invalid-name,line-too-long,too-many-locals,too-few-public-methods,fixme,stop-iteration-return,too-many-branches,useless-import-alias,no-else-return,logging-not-lazy,redefined-builtin,consider-using-f-string,consider-using-dict-items,arguments-renamed
      - run:
          name: 'unittests'
          when: always
          command: |
            source /usr/local/share/virtualenvs/tap-zendesk/bin/activate
            uv pip install pytest coverage parameterized
            coverage run -m pytest test/unittests
            coverage html
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: htmlcov

  integration_tests:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: 'Integration Tests'
          no_output_timeout: 200m
          command: |
            source /usr/local/share/virtualenvs/tap-zendesk/bin/activate
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            mkdir /tmp/${CIRCLE_PROJECT_REPONAME}
            export STITCH_CONFIG_DIR=/tmp/${CIRCLE_PROJECT_REPONAME}
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            uv pip install 'zenpy==2.0.24'
            circleci tests glob "test/*.py" | circleci tests split > ./tests-to-run
            if [ -s ./tests-to-run ]; then
              for test_file in $(cat ./tests-to-run)
              do
                run-test --tap=${CIRCLE_PROJECT_REPONAME} $test_file
              done
            fi
      - slack/notify-on-failure:
          only_for_branches: master
      - store_artifacts:
          path: /tmp/tap-zendesk

workflows:
  version: 2
  commit: &commit_jobs
    jobs:
      - build_and_test:
          context:
            - circleci-user
            - tier-1-tap-user
      - integration_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - build_and_test
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - integration_tests

  build_daily:
    <<: *commit_jobs
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
